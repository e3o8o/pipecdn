name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl file

      - name: Create release packages
        run: |
          chmod +x ./create_packages.sh
          ./create_packages.sh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Upload AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/ppn-${{ env.VERSION }}.AppImage
          asset_name: ppn-${{ env.VERSION }}.AppImage
          asset_content_type: application/octet-stream

      - name: Upload DEB package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/ppn_${{ env.VERSION }}_amd64.deb
          asset_name: ppn_${{ env.VERSION }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload RPM package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/ppn-${{ env.VERSION }}-1.x86_64.rpm
          asset_name: ppn-${{ env.VERSION }}-1.x86_64.rpm
          asset_content_type: application/x-rpm

      - name: Upload source tarball
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/ppn-${{ env.VERSION }}.tar.gz
          asset_name: ppn-${{ env.VERSION }}.tar.gz
          asset_content_type: application/gzip 